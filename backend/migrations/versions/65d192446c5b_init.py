"""init

Revision ID: 65d192446c5b
Revises: 
Create Date: 2023-12-11 21:51:36.248184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '65d192446c5b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('organization_id', sa.Text(), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('slug', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id')
    )
    op.create_table('parsing_type',
    sa.Column('type', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('type'),
    sa.UniqueConstraint('type')
    )
    op.create_table('user',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('email', sa.Text(), nullable=False),
    sa.Column('hashed_password', sa.Text(), nullable=True),
    sa.Column('first_name', sa.Text(), nullable=True),
    sa.Column('last_name', sa.Text(), nullable=True),
    sa.Column('is_test', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('cli_access',
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_at', sa.TIMESTAMP(timezone=True), server_default=sa.text("CURRENT_TIMESTAMP + INTERVAL '7 days'"), nullable=True),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('api_key', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('api_key')
    )
    op.create_table('users_organizations',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Text(), nullable=False),
    sa.Column('organization_id', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.organization_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'organization_id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('project',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('api_key', sa.Text(), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=False),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('cli_access_key', sa.Text(), nullable=True),
    sa.Column('organization_id', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cli_access_key'], ['cli_access.api_key'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.organization_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('api_key'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('chat_model',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('function_model',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('function_schema',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=True),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('mock_response', sa.Text(), nullable=True),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('llm',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('api_base', sa.Text(), nullable=True),
    sa.Column('project_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_changelog',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('logs', sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), server_default=sa.text("'{}'::jsonb[]"), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sample_input',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=True),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('online', sa.Boolean(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], onupdate='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('tag',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('color', sa.Text(), nullable=True),
    sa.Column('project_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_model_version',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=False),
    sa.Column('model', sa.Text(), nullable=False),
    sa.Column('system_prompt', sa.Text(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('functions', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_ab_test', sa.Boolean(), nullable=True),
    sa.Column('ratio', sa.Float(), nullable=True),
    sa.Column('from_version', sa.BigInteger(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('memo', sa.Text(), nullable=True),
    sa.Column('chat_model_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['chat_model_uuid'], ['chat_model.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('function_model_version',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('model', sa.Text(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=True),
    sa.Column('from_version', sa.BigInteger(), nullable=True),
    sa.Column('parsing_type', sa.Text(), nullable=True),
    sa.Column('output_keys', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('functions', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_ab_test', sa.Boolean(), nullable=True),
    sa.Column('ratio', sa.Float(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('memo', sa.Text(), nullable=True),
    sa.Column('function_model_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['function_model_uuid'], ['function_model.uuid'], ),
    sa.ForeignKeyConstraint(['parsing_type'], ['parsing_type.type'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('chat_session',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('run_from_deployment', sa.Boolean(), nullable=False),
    sa.Column('session_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('version_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['version_uuid'], ['chat_model_version.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('prompt',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('step', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('version_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['version_uuid'], ['function_model_version.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('run_log',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('run_from_deployment', sa.Boolean(), nullable=True),
    sa.Column('input_register_name', sa.Text(), nullable=True),
    sa.Column('inputs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('raw_output', sa.Text(), nullable=True),
    sa.Column('parsed_outputs', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('run_log_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('function_call', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('tool_calls', sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True),
    sa.Column('score', sa.BigInteger(), nullable=True),
    sa.Column('prompt_tokens', sa.BigInteger(), nullable=True),
    sa.Column('completion_tokens', sa.BigInteger(), nullable=True),
    sa.Column('total_tokens', sa.BigInteger(), nullable=True),
    sa.Column('latency', sa.Float(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('version_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['version_uuid'], ['function_model_version.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('chat_message',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('tool_calls', sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())), nullable=True),
    sa.Column('function_call', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('token_count', sa.BigInteger(), nullable=True),
    sa.Column('chat_message_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('session_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['session_uuid'], ['chat_session.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('chat_log',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('user_message_uuid', sa.UUID(), nullable=False),
    sa.Column('assistant_message_uuid', sa.UUID(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.Column('session_uuid', sa.UUID(), nullable=False),
    sa.Column('prompt_tokens', sa.BigInteger(), nullable=True),
    sa.Column('completion_tokens', sa.BigInteger(), nullable=True),
    sa.Column('total_tokens', sa.BigInteger(), nullable=True),
    sa.Column('latency', sa.Float(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['assistant_message_uuid'], ['chat_message.uuid'], ),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], ),
    sa.ForeignKeyConstraint(['session_uuid'], ['chat_session.uuid'], ),
    sa.ForeignKeyConstraint(['user_message_uuid'], ['chat_message.uuid'], ),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('chat_log')
    op.drop_table('chat_message')
    op.drop_table('run_log')
    op.drop_table('prompt')
    op.drop_table('chat_session')
    op.drop_table('function_model_version')
    op.drop_table('chat_model_version')
    op.drop_table('tag')
    op.drop_table('sample_input')
    op.drop_table('project_changelog')
    op.drop_table('llm')
    op.drop_table('function_schema')
    op.drop_table('function_model')
    op.drop_table('chat_model')
    op.drop_table('project')
    op.drop_table('users_organizations')
    op.drop_table('cli_access')
    op.drop_table('user')
    op.drop_table('parsing_type')
    op.drop_table('organization')
    # ### end Alembic commands ###
