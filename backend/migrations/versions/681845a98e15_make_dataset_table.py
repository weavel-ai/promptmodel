"""make dataset table

Revision ID: 681845a98e15
Revises: 9b2f4979746d
Create Date: 2023-12-27 18:29:35.513257

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '681845a98e15'
down_revision: Union[str, None] = '9b2f4979746d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization_llm_api_key',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('organization_id', sa.Text(), nullable=False),
    sa.Column('llm_key', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.organization_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', 'organization_id')
    )
    op.create_table('dataset',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=True),
    sa.Column('eval_metric_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['eval_metric_uuid'], ['eval_metric.uuid'], onupdate='CASCADE', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('id')
    )
    op.create_table('dataset_sample_input',
    sa.Column('dataset_uuid', sa.UUID(), nullable=False),
    sa.Column('sample_input_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['dataset_uuid'], ['dataset.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sample_input_uuid'], ['sample_input.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('dataset_uuid', 'sample_input_uuid')
    )
    op.add_column('function_model_version', sa.Column('batch_testing', sa.Boolean(), nullable=False))
    op.add_column('run_log', sa.Column('sample_input_uuid', sa.UUID(), nullable=True))
    op.create_foreign_key(None, 'run_log', 'sample_input', ['sample_input_uuid'], ['uuid'], onupdate='CASCADE', ondelete='SET NULL')
    op.drop_column('run_log', 'input_register_name')
    op.add_column('sample_input', sa.Column('ground_truth', sa.Text(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('sample_input', 'ground_truth')
    op.add_column('run_log', sa.Column('input_register_name', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'run_log', type_='foreignkey')
    op.drop_column('run_log', 'sample_input_uuid')
    op.drop_column('function_model_version', 'batch_testing')
    op.drop_table('dataset_sample_input')
    op.drop_table('dataset')
    op.drop_table('organization_llm_api_key')
    # ### end Alembic commands ###
