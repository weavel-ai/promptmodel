"""set ondelete=cascade

Revision ID: b1b8da015873
Revises: cd67e7c8a467
Create Date: 2023-12-26 15:35:19.036309

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b1b8da015873"
down_revision: Union[str, None] = "cd67e7c8a467"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "chat_log_assistant_message_uuid_fkey", "chat_log", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "chat_log",
        "chat_message",
        ["assistant_message_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint("chat_model_project_uuid_fkey", "chat_model", type_="foreignkey")
    op.create_foreign_key(
        None,
        "chat_model",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "chat_model_version_chat_model_uuid_fkey",
        "chat_model_version",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "chat_model_version",
        "chat_model",
        ["chat_model_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "chat_session_version_uuid_fkey", "chat_session", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "chat_session",
        "chat_model_version",
        ["version_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_unique_constraint(None, "chat_session_score", ["id"])
    op.drop_constraint(
        "chat_session_score_chat_session_uuid_fkey",
        "chat_session_score",
        type_="foreignkey",
    )
    op.drop_constraint(
        "chat_session_score_eval_metric_uuid_fkey",
        "chat_session_score",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "chat_session_score",
        "eval_metric",
        ["eval_metric_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "chat_session_score",
        "chat_session",
        ["chat_session_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint("cli_access_user_id_fkey", "cli_access", type_="foreignkey")
    op.create_foreign_key(
        None,
        "cli_access",
        "user",
        ["user_id"],
        ["user_id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "eval_metric_project_uuid_fkey", "eval_metric", type_="foreignkey"
    )
    op.drop_constraint(
        "eval_metric_chat_model_uuid_fkey", "eval_metric", type_="foreignkey"
    )
    op.drop_constraint(
        "eval_metric_function_model_uuid_fkey", "eval_metric", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "eval_metric",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "eval_metric",
        "function_model",
        ["function_model_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.create_foreign_key(
        None,
        "eval_metric",
        "chat_model",
        ["chat_model_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "function_model_project_uuid_fkey", "function_model", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "function_model",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "function_schema_project_uuid_fkey", "function_schema", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "function_schema",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.alter_column(
        "project_changelog", "project_uuid", existing_type=sa.UUID(), nullable=False
    )
    op.drop_constraint(
        "project_changelog_project_uuid_fkey", "project_changelog", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "project_changelog",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint("run_log_project_uuid_fkey", "run_log", type_="foreignkey")
    op.create_foreign_key(
        None,
        "run_log",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "run_log_score_run_log_uuid_fkey", "run_log_score", type_="foreignkey"
    )
    op.drop_constraint(
        "run_log_score_eval_metric_uuid_fkey", "run_log_score", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "run_log_score",
        "run_log",
        ["run_log_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "run_log_score",
        "eval_metric",
        ["eval_metric_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "sample_input_project_uuid_fkey", "sample_input", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "sample_input",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "users_organizations_user_id_fkey", "users_organizations", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "users_organizations",
        "user",
        ["user_id"],
        ["user_id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users_organizations", type_="foreignkey")
    op.create_foreign_key(
        "users_organizations_user_id_fkey",
        "users_organizations",
        "user",
        ["user_id"],
        ["user_id"],
        onupdate="CASCADE",
    )
    op.drop_constraint(None, "sample_input", type_="foreignkey")
    op.create_foreign_key(
        "sample_input_project_uuid_fkey",
        "sample_input",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "run_log_score", type_="foreignkey")
    op.drop_constraint(None, "run_log_score", type_="foreignkey")
    op.create_foreign_key(
        "run_log_score_eval_metric_uuid_fkey",
        "run_log_score",
        "eval_metric",
        ["eval_metric_uuid"],
        ["uuid"],
    )
    op.create_foreign_key(
        "run_log_score_run_log_uuid_fkey",
        "run_log_score",
        "run_log",
        ["run_log_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "run_log", type_="foreignkey")
    op.create_foreign_key(
        "run_log_project_uuid_fkey",
        "run_log",
        "project",
        ["project_uuid"],
        ["uuid"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    op.drop_constraint(None, "project_changelog", type_="foreignkey")
    op.create_foreign_key(
        "project_changelog_project_uuid_fkey",
        "project_changelog",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.alter_column(
        "project_changelog", "project_uuid", existing_type=sa.UUID(), nullable=True
    )
    op.drop_constraint(None, "function_schema", type_="foreignkey")
    op.create_foreign_key(
        "function_schema_project_uuid_fkey",
        "function_schema",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "function_model", type_="foreignkey")
    op.create_foreign_key(
        "function_model_project_uuid_fkey",
        "function_model",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "eval_metric", type_="foreignkey")
    op.drop_constraint(None, "eval_metric", type_="foreignkey")
    op.drop_constraint(None, "eval_metric", type_="foreignkey")
    op.create_foreign_key(
        "eval_metric_function_model_uuid_fkey",
        "eval_metric",
        "function_model",
        ["function_model_uuid"],
        ["uuid"],
    )
    op.create_foreign_key(
        "eval_metric_chat_model_uuid_fkey",
        "eval_metric",
        "chat_model",
        ["chat_model_uuid"],
        ["uuid"],
    )
    op.create_foreign_key(
        "eval_metric_project_uuid_fkey",
        "eval_metric",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "cli_access", type_="foreignkey")
    op.create_foreign_key(
        "cli_access_user_id_fkey",
        "cli_access",
        "user",
        ["user_id"],
        ["user_id"],
        onupdate="CASCADE",
    )
    op.drop_constraint(None, "chat_session_score", type_="foreignkey")
    op.drop_constraint(None, "chat_session_score", type_="foreignkey")
    op.create_foreign_key(
        "chat_session_score_eval_metric_uuid_fkey",
        "chat_session_score",
        "eval_metric",
        ["eval_metric_uuid"],
        ["uuid"],
    )
    op.create_foreign_key(
        "chat_session_score_chat_session_uuid_fkey",
        "chat_session_score",
        "chat_session",
        ["chat_session_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "chat_session_score", type_="unique")
    op.drop_constraint(None, "chat_session", type_="foreignkey")
    op.create_foreign_key(
        "chat_session_version_uuid_fkey",
        "chat_session",
        "chat_model_version",
        ["version_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "chat_model_version", type_="foreignkey")
    op.create_foreign_key(
        "chat_model_version_chat_model_uuid_fkey",
        "chat_model_version",
        "chat_model",
        ["chat_model_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "chat_model", type_="foreignkey")
    op.create_foreign_key(
        "chat_model_project_uuid_fkey",
        "chat_model",
        "project",
        ["project_uuid"],
        ["uuid"],
    )
    op.drop_constraint(None, "chat_log", type_="foreignkey")
    op.create_foreign_key(
        "chat_log_assistant_message_uuid_fkey",
        "chat_log",
        "chat_message",
        ["assistant_message_uuid"],
        ["uuid"],
    )
    # ### end Alembic commands ###
