"""make run_log_score

Revision ID: cd67e7c8a467
Revises: da46d20f2b38
Create Date: 2023-12-20 22:21:35.551800

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "cd67e7c8a467"
down_revision: Union[str, None] = "da46d20f2b38"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "chat_session_score",
        sa.Column("id", sa.BigInteger(), sa.Identity(always=False), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("chat_session_uuid", sa.UUID(), nullable=False),
        sa.Column("eval_metric_uuid", sa.UUID(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_session_uuid"],
            ["chat_session.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["eval_metric_uuid"],
            ["eval_metric.uuid"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "run_log_score",
        sa.Column("id", sa.BigInteger(), sa.Identity(always=False), nullable=False),
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("run_log_uuid", sa.UUID(), nullable=False),
        sa.Column("eval_metric_uuid", sa.UUID(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["eval_metric_uuid"],
            ["eval_metric.uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["run_log_uuid"],
            ["run_log.uuid"],
        ),
        sa.PrimaryKeyConstraint("run_log_uuid", "eval_metric_uuid"),
        sa.UniqueConstraint("id"),
    )
    op.drop_table("score")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "score",
        sa.Column(
            "id",
            sa.BIGINT(),
            sa.Identity(
                always=False,
                start=1,
                increment=1,
                minvalue=1,
                maxvalue=9223372036854775807,
                cycle=False,
                cache=1,
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("run_log_uuid", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("chat_session_uuid", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column("eval_metric_uuid", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("value", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["chat_session_uuid"],
            ["chat_session.uuid"],
            name="score_chat_session_uuid_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["eval_metric_uuid"],
            ["eval_metric.uuid"],
            name="score_eval_metric_uuid_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["run_log_uuid"], ["run_log.uuid"], name="score_run_log_uuid_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="score_pkey"),
        sa.UniqueConstraint("id", name="score_id_key"),
    )
    op.drop_table("run_log_score")
    op.drop_table("chat_session_score")
    # ### end Alembic commands ###
