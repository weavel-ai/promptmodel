"""add_unit_table

Revision ID: abe2d78b38ba
Revises: f4cbb53594f3
Create Date: 2024-01-10 15:08:40.403744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'abe2d78b38ba'
down_revision: Union[str, None] = 'f4cbb53594f3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('unit',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('project_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['project_uuid'], ['project.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('unit_version',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('version', sa.BigInteger(), nullable=True),
    sa.Column('unit_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['unit_uuid'], ['unit.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('unit_log',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('uuid', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('version_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['version_uuid'], ['unit_version.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('unit_log_score',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('unit_log_uuid', sa.UUID(), nullable=False),
    sa.Column('eval_metric_uuid', sa.UUID(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['eval_metric_uuid'], ['eval_metric.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_log_uuid'], ['unit_log.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('unit_log_uuid', 'eval_metric_uuid')
    )
    op.create_table('unit_log_run_log',
    sa.Column('id', sa.BigInteger(), sa.Identity(always=False), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('unit_log_uuid', sa.UUID(), nullable=False),
    sa.Column('run_log_uuid', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['run_log_uuid'], ['run_log.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_log_uuid'], ['unit_log.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('unit_log_uuid', 'run_log_uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit_log_run_log')
    op.drop_table('unit_log_score')
    op.drop_table('unit_log')
    op.drop_table('unit_version')
    op.drop_table('unit')
    # ### end Alembic commands ###
