"""Add project_uuid FK to run_log

Revision ID: da46d20f2b38
Revises: 67f6ff82e7bf
Create Date: 2023-12-19 18:00:30.535071

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'da46d20f2b38'
down_revision: Union[str, None] = '67f6ff82e7bf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'chat_log', ['uuid'])
    op.create_unique_constraint(None, 'chat_message', ['uuid'])
    op.create_unique_constraint(None, 'chat_model', ['uuid'])
    op.create_unique_constraint(None, 'chat_model_version', ['uuid'])
    op.create_unique_constraint(None, 'chat_session', ['uuid'])
    op.create_unique_constraint(None, 'eval_metric', ['uuid'])
    op.create_unique_constraint(None, 'eval_metric', ['id'])
    op.create_unique_constraint(None, 'function_model', ['uuid'])
    op.create_unique_constraint(None, 'function_model_version', ['uuid'])
    op.create_unique_constraint(None, 'parsing_type', ['type'])
    op.create_unique_constraint(None, 'project', ['uuid'])
    op.add_column('run_log', sa.Column('project_uuid', sa.UUID(), nullable=True))
    op.create_unique_constraint(None, 'run_log', ['uuid'])
    op.create_foreign_key(None, 'run_log', 'project', ['project_uuid'], ['uuid'])
    op.alter_column('sample_input', 'input_keys',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=sa.ARRAY(sa.String()),
               existing_nullable=True)
    op.create_unique_constraint(None, 'score', ['id'])
    op.create_unique_constraint(None, 'user', ['user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'score', type_='unique')
    op.alter_column('sample_input', 'input_keys',
               existing_type=sa.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=True)
    op.drop_constraint(None, 'run_log', type_='foreignkey')
    op.drop_constraint(None, 'run_log', type_='unique')
    op.drop_column('run_log', 'project_uuid')
    op.drop_constraint(None, 'project', type_='unique')
    op.drop_constraint(None, 'parsing_type', type_='unique')
    op.drop_constraint(None, 'function_model_version', type_='unique')
    op.drop_constraint(None, 'function_model', type_='unique')
    op.drop_constraint(None, 'eval_metric', type_='unique')
    op.drop_constraint(None, 'eval_metric', type_='unique')
    op.drop_constraint(None, 'chat_session', type_='unique')
    op.drop_constraint(None, 'chat_model_version', type_='unique')
    op.drop_constraint(None, 'chat_model', type_='unique')
    op.drop_constraint(None, 'chat_message', type_='unique')
    op.drop_constraint(None, 'chat_log', type_='unique')
    # ### end Alembic commands ###
