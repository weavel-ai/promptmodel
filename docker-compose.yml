version: "3.8"
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-yourdbname}
      - POSTGRES_USER=${POSTGRES_USER:-youruser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yourpassword}
    volumes:
      - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - server

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

    networks:
      - server

  pg-to-redis-listener:
    build: ./pg_to_redis_listener
    volumes:
      - ./pg_to_redis_listener:/app
      - ./volumes/pg-to-redis-listener:/app
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_DB=${POSTGRES_DB:-yourdbname}
      - POSTGRES_USER=${POSTGRES_USER:-youruser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-yourpassword}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_HOST=${REDIS_HOST:-redis}
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - server
    restart: always

  backend:
    build: ./backend
    command: uvicorn server:app --host 0.0.0.0 --reload
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=${POSTGRES_DB:-yourdbname}
      - DB_USER=${POSTGRES_USER:-youruser}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-yourpassword}
      - DB_PORT=${POSTGRES_PORT:-5432}
      - SQLALCHEMY_URL=postgresql://${POSTGRES_USER:-youruser}:${POSTGRES_PASSWORD:-yourpassword}@db:5432/${POSTGRES_DB:-yourdbname}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-yoursecret}
      - NEXTAUTH_URL=http://frontend:3000
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - server
    restart: always
    # develop:
    #   watch:
    #     - path: ./backend/requirements.txt
    #       action: rebuild
    #     - path: ./backend
    #       target: /app/backend
    # action: sync

  frontend:
    build: ./frontend
    volumes:
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=yoursecret
      - NEXT_PUBLIC_ENDPOINT_URL=${NEXT_PUBLIC_ENDPOINT_URL:-http://localhost:3000/api}
      # - NEXT_PUBLIC_ENDPOINT_URL=https://promptmodel.up.railway.app/api
      - NEXT_PUBLIC_SUPABASE_URL=${NEXT_PUBLIC_SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_KEY=${NEXT_PUBLIC_SUPABASE_KEY}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - NEXT_PUBLIC_AMPLITUDE_API_KEY=${NEXT_PUBLIC_AMPLITUDE_API_KEY}
      - NEXT_PUBLIC_SELF_HOSTED=${NEXT_PUBLIC_SELF_HOSTED:-true}
    depends_on:
      backend:
        condition: service_started
      pg-to-redis-listener:
        condition: service_started
    networks:
      - server
    # restart: always
    # x-watch:
    #   - path: ./path_to_your_nextjs_app
    #     action: sync+restart

networks:
  server:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
