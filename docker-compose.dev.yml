version: "3.8"

services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    # volumes:
    #   - ./volumes/postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - server

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

    networks:
      - server

  pg-to-redis-listener:
    build:
      context: ./pg_to_redis_listener
      args:
        - POSTGRES_HOST=db
        - POSTGRES_DB=${POSTGRES_DB:-postgres}
        - POSTGRES_USER=${POSTGRES_USER:-postgres}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
        - POSTGRES_PORT=${POSTGRES_PORT:-5432}
        - REDIS_HOST=redis
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - server
    restart: always

  backend:
    build:
      context: ./backend
      args:
        - POSTGRES_HOST=db
        - POSTGRES_DB=${POSTGRES_DB:-postgres}
        - POSTGRES_USER=${POSTGRES_USER:-postgres}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
        - POSTGRES_PORT=${POSTGRES_PORT:-5432}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-yoursecret}
        - FRONTEND_PUBLIC_URL=${FRONTEND_PUBLIC_URL:-https://localhost:3000}
        - PORT=8000
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-yoursecret}
      - FRONTEND_PUBLIC_URL=${FRONTEND_PUBLIC_URL:-https://localhost:3000}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-yourkey}
      - PORT=8000
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - server
    restart: always
    develop:
      watch:
        - path: ./backend/requirements.txt
          action: rebuild
        - path: ./backend/migrations/versions/*.py
          action: rebuild
        - path: ./backend
          # action: rebuild
          action: sync

  frontend:
    build:
      context: ./frontend
      args:
        - FRONTEND_PUBLIC_URL=${FRONTEND_PUBLIC_URL:-https://localhost:3000}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-yoursecret}
        - BACKEND_PUBLIC_URL=${BACKEND_PUBLIC_URL:-https://localhost:8000}
        - NEXT_PUBLIC_SELF_HOSTED=true
    # command: npm run dev
    ports:
      - "3000:3000"
    environment:
      - FRONTEND_PUBLIC_URL=${FRONTEND_PUBLIC_URL:-https://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-yoursecret}
      - BACKEND_PUBLIC_URL=${BACKEND_PUBLIC_URL:-https://localhost:8000}
      - NEXT_PUBLIC_SELF_HOSTED=true
    depends_on:
      backend:
        condition: service_started
      pg-to-redis-listener:
        condition: service_started
    networks:
      - server
    restart: always
    develop:
      watch:
        - path: ./frontend
          ignore:
            - node_modules/
          target: /app/
          action: sync
          # action: rebuild
        - path: ./frontend/package.json
          action: rebuild

networks:
  server:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
